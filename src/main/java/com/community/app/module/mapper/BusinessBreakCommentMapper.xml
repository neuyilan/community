<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.community.app.module.dao.BusinessBreakCommentDao" >
	<!-- 返回结构集 -->
	<resultMap id="BusinessBreakCommentResult" type="BusinessBreakComment">
			<result column="commentId" property="commentId" />
			<result column="breakId" property="breakId" />
			<result column="commentorId" property="commentorId" />
			<result column="commentorName" property="commentorName" />
			<result column="content" property="content" />
			<result column="commentTime" property="commentTime" />
			<result column="contentType" property="contentType" />
			<result column="videoSize" property="videoSize" />
			<result column="videoTime" property="videoTime" />
			<result column="videoFormat" property="videoFormat" />
			<result column="portrait" property="portrait" />
			<result column="nickname" property="nickname" />
			<result column="b_portrait" property="b_portrait" />
			<result column="b_nickname" property="b_nickname" />
			<result column="to" property="to" />
	</resultMap>
	
	<!-- 所有字段 -->
	<sql id="Base_Column_List" >
			c.commentId,
			c.breakId,
			c.commentorId,
			c.commentorName,
			c.content,
			c.commentTime,
			c.contentType,
			c.videoSize,
			c.videoTime,
			c.videoFormat,
			c.to
	</sql>
	
	<!-- 所有字段 -->
	<sql id="Base_Column_List_app" >
			commentId,
			breakId,
			commentorId,
			commentorName,
			content,
			commentTime,
			contentType,
			videoSize,
			videoTime,
			videoFormat,
	</sql>
	
	<!-- 所有字段查询条件 -->
	<sql id="Base_Where_Clause">
		<where>
			<trim  suffixOverrides="," >
					<if test="commentId != null and commentId != ''" >
				   		and commentId = #{commentId}
					</if>
					<if test="breakId != null and breakId != ''" >
				   		and breakId = #{breakId}
					</if>
					<if test="commentorId != null and commentorId != ''" >
				   		and commentorId = #{commentorId}
					</if>
					<if test="commentorName != null and commentorName != ''" >
				   		and commentorName = #{commentorName}
					</if>
					<if test="content != null and content != ''" >
				   		and content = #{content}
					</if>
					<if test="commentTime != null and commentTime != ''" >
				   		and commentTime = #{commentTime}
					</if>
					<if test="contentType != null and contentType != ''" >
				   		and contentType = #{contentType}
					</if>
					<if test="videoSize != null and videoSize != ''" >
				   		and videoSize = #{videoSize}
					</if>
					<if test="videoTime != null and videoTime != ''" >
				   		and videoTime = #{videoTime}
					</if>
					<if test="videoFormat != null and videoFormat != ''" >
				   		and videoFormat = #{videoFormat}
					</if>
			</trim>
		</where>
	</sql>
	
	<!-- 根据爆料ID查询所有回复的爆料BusinessBreakComment -->
	<select id="findCommentListByBreakId" resultMap="BusinessBreakCommentResult" parameterType="Object">
		select <include refid="Base_Column_List" />,u.portrait,u.nickname,b.avatar as b_portrait,b.nickname b_nickname 
		from business_break_comment c left join app_user u on u.userId=c.commentorId left join business_user b on b.userId = c.commentorId   
		<include refid="Base_Where_Clause" />
		<if test="pager.orderCondition != null and pager.orderCondition != ''" >
      	${pager.orderCondition}
	    </if>
	</select>
	
	<!-- 根据id查询 BusinessBreakComment -->
	<select id="findById"  resultMap="BusinessBreakCommentResult" parameterType="java.lang.Integer">
		select <include refid="Base_Column_List" /> from business_break_comment where commentId = #{id}
	</select>
	
	<!-- 无条件查询所有BusinessBreakComment -->
	<select id="findAll" resultMap="BusinessBreakCommentResult">
		select <include refid="Base_Column_List" /> from business_break_comment 
	</select>
	
	<!-- 按Map对象条件查询所有BusinessBreakComment -->
	<select id="findByMap" resultMap="BusinessBreakCommentResult" parameterType="java.util.Map">
		select <include refid="Base_Column_List" /> from business_break_comment <include refid="Base_Where_Clause" />
	</select>
	
	<!-- 按VO对象条件查询所有BusinessBreakComment -->
	<select id="findByExample" resultMap="BusinessBreakCommentResult" parameterType="com.community.app.module.vo.BusinessBreakCommentQuery">
		select <include refid="Base_Column_List" /> from business_break_comment <include refid="Base_Where_Clause" />
	</select>
	
	<!-- BusinessBreakComment根据搜索条件，搜索分页数据 -->
	<select id="findAllPage" resultType="BusinessBreakComment" parameterType="Object">
		select <include refid="Base_Column_List_app" />c.to,u.portrait,u.nickname,b.avatar as b_portrait,b.avatar as b_portrait,b.nickname b_nickname  from business_break_comment c left join app_user u on u.userId=c.commentorId left join business_user b on b.userId = c.commentorId 
		<include refid="Base_Where_Clause" />
		<if test="pager.orderCondition != null and pager.orderCondition != ''" >
      	${pager.orderCondition}
	    </if>
	    <if test="pager.mysqlQueryCondition != null and pager.mysqlQueryCondition != ''" >
	    ${pager.mysqlQueryCondition}
	    </if>
	</select>
	
	<!-- BusinessBreakComment列表总数-->
	<select id="selectCount" resultType="java.lang.Integer"  parameterType="Object">
		select count(1) from business_break_comment 
		<include refid="Base_Where_Clause" />
	</select>
	
	<!-- BusinessBreakComment根据搜索条件，搜索分页数据 -->
	<select id="findAllPage_app" resultType="BusinessBreakComment" parameterType="Object">
		select <include refid="Base_Column_List_app" />c.to,u.portrait,u.nickname,b.avatar as b_portrait,b.avatar as b_portrait,b.nickname b_nickname  from business_break_comment c left join app_user u on u.userId=c.commentorId left join business_user b on b.userId = c.commentorId 
		<include refid="Base_Where_Clause" />
		<if test="pager.orderCondition != null and pager.orderCondition != ''" >
      	${pager.orderCondition}
	    </if>
	    <if test="pager.mysqlQueryCondition != null and pager.mysqlQueryCondition != ''" >
	    ${pager.mysqlQueryCondition}
	    </if>
	</select>
	
	<!-- BusinessBreakComment列表总数-->
	<select id="selectCount_app" resultType="java.lang.Integer"  parameterType="Object">
		select count(1) from business_break_comment 
		<include refid="Base_Where_Clause" />
	</select>
	
	<!-- BusinessBreakComment保存数据 -->
	<insert id="save" parameterType="BusinessBreakComment">
		<selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="commentId">
			SELECT LAST_INSERT_ID()
  		</selectKey>
		insert into business_break_comment(
		breakId,
		commentorId,
		commentorName,
		content,
		commentTime,
		contentType,
		videoTime,
		business_break_comment.to
		) values(
				#{breakId},
		#{commentorId},
		(select nickname from app_user where userId=#{commentorId}),
		#{content},
		#{commentTime},
		#{contentType},
		#{videoTime},
		#{to}
		)
	</insert>
	
	<!-- BusinessBreakComment回复保存数据 -->
	<insert id="replySave" parameterType="BusinessBreakComment">
		<selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="commentId">
			SELECT LAST_INSERT_ID()
  		</selectKey>
		insert into business_break_comment(
		breakId,
		commentorId,
		commentorName,
		content,
		commentTime,
		contentType,
		videoTime,
		business_break_comment.to
		) values(
		#{breakId},
		#{commentorId},
		#{commentorName},
		#{content},
		#{commentTime},
		#{contentType},
		#{videoTime},
		#{to}
		)
	</insert>
	
	<!-- BusinessBreakComment修改数据 -->
	<update id="update" parameterType="BusinessBreakComment">
		update business_break_comment 
		<set>
			<if test="breakId != null and breakId != ''" >
			breakId=#{breakId},
			</if>
			<if test="commentorId != null and commentorId != ''" >
			commentorId=#{commentorId},
			</if>
			<if test="commentorName != null and commentorName != ''" >
			commentorName=#{commentorName},
			</if>
			<if test="content != null and content != ''" >
			content=#{content},
			</if>
			<if test="commentTime != null and commentTime != ''" >
			commentTime=#{commentTime},
			</if>
			<if test="contentType != null and contentType != ''" >
			contentType=#{contentType},
			</if>
			<if test="videoSize != null and videoSize != ''" >
			videoSize=#{videoSize},
			</if>
			<if test="videoTime != null and videoTime != ''" >
			videoTime=#{videoTime},
			</if>
			<if test="videoFormat != null and videoFormat != ''" >
			videoFormat=#{videoFormat}
			</if>
		</set> 
		where 
		commentId=#{commentId}
		
		
		
		
		
		
		
		
		
	</update>
	
	<!-- BusinessBreakComment删除数据 -->
	<delete id="delete" parameterType="java.lang.Integer">
		delete from business_break_comment where 
		commentId=#{commentId}
																			</delete>
	
</mapper>
	
